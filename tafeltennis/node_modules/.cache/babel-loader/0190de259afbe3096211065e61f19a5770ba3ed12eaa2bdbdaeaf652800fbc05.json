{"ast":null,"code":"var _jsxFileName = \"/Users/franksijbrands/ai/sjoelen/tafeltennis/src/components/Stats.tsx\";\nimport React from 'react';\nimport { Paper, Typography, Box, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, LinearProgress } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Stats = ({\n  stats\n}) => {\n  const sortedStats = [...stats].sort((a, b) => b.winPercentage - a.winPercentage);\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    elevation: 3,\n    sx: {\n      p: 3,\n      background: 'linear-gradient(45deg, #1a237e 30%, #0d47a1 90%)',\n      color: 'white'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      gutterBottom: true,\n      align: \"center\",\n      children: \"Statistieken\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              sx: {\n                color: 'white',\n                fontWeight: 'bold'\n              },\n              children: \"Speler\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              sx: {\n                color: 'white',\n                fontWeight: 'bold'\n              },\n              align: \"center\",\n              children: \"Winst\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              sx: {\n                color: 'white',\n                fontWeight: 'bold'\n              },\n              align: \"center\",\n              children: \"Verlies\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              sx: {\n                color: 'white',\n                fontWeight: 'bold'\n              },\n              align: \"center\",\n              children: \"Totaal\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              sx: {\n                color: 'white',\n                fontWeight: 'bold'\n              },\n              align: \"center\",\n              children: \"Win %\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: sortedStats.map(stat => /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              sx: {\n                color: 'white'\n              },\n              children: stat.player\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              sx: {\n                color: '#4caf50'\n              },\n              align: \"center\",\n              children: stat.wins\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              sx: {\n                color: '#f44336'\n              },\n              align: \"center\",\n              children: stat.losses\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              sx: {\n                color: 'white'\n              },\n              align: \"center\",\n              children: stat.totalGames\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              sx: {\n                color: 'white'\n              },\n              align: \"center\",\n              children: [stat.winPercentage.toFixed(1), \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 17\n            }, this)]\n          }, stat.player, true, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mt: 2\n      },\n      children: sortedStats.map(stat => /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          mb: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            justifyContent: 'space-between',\n            mb: 1\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle1\",\n            sx: {\n              color: 'white'\n            },\n            children: stat.player\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle1\",\n            sx: {\n              color: 'white'\n            },\n            children: [stat.wins, \"W - \", stat.losses, \"V (\", stat.winPercentage.toFixed(1), \"%)\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(LinearProgress, {\n          variant: \"determinate\",\n          value: stat.winPercentage,\n          sx: {\n            height: 10,\n            borderRadius: 5,\n            backgroundColor: 'rgba(255, 255, 255, 0.2)',\n            '& .MuiLinearProgress-bar': {\n              backgroundColor: stat.winPercentage >= 50 ? '#4caf50' : '#f44336'\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this)]\n      }, stat.player, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_c = Stats;\nexport default Stats;\nvar _c;\n$RefreshReg$(_c, \"Stats\");","map":{"version":3,"names":["React","Paper","Typography","Box","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","LinearProgress","jsxDEV","_jsxDEV","Stats","stats","sortedStats","sort","a","b","winPercentage","elevation","sx","p","background","color","children","variant","gutterBottom","align","fileName","_jsxFileName","lineNumber","columnNumber","fontWeight","map","stat","player","wins","losses","totalGames","toFixed","mt","mb","display","justifyContent","value","height","borderRadius","backgroundColor","_c","$RefreshReg$"],"sources":["/Users/franksijbrands/ai/sjoelen/tafeltennis/src/components/Stats.tsx"],"sourcesContent":["import React from 'react';\nimport {\n  Grid,\n  Paper,\n  Typography,\n  Box,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  LinearProgress\n} from '@mui/material';\nimport { PlayerStats } from '../types';\n\ninterface StatsProps {\n  stats: PlayerStats[];\n}\n\nconst Stats: React.FC<StatsProps> = ({ stats }) => {\n  const sortedStats = [...stats].sort((a, b) => b.winPercentage - a.winPercentage);\n\n  return (\n    <Paper elevation={3} sx={{ p: 3, background: 'linear-gradient(45deg, #1a237e 30%, #0d47a1 90%)', color: 'white' }}>\n      <Typography variant=\"h6\" gutterBottom align=\"center\">\n        Statistieken\n      </Typography>\n      <TableContainer>\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell sx={{ color: 'white', fontWeight: 'bold' }}>Speler</TableCell>\n              <TableCell sx={{ color: 'white', fontWeight: 'bold' }} align=\"center\">Winst</TableCell>\n              <TableCell sx={{ color: 'white', fontWeight: 'bold' }} align=\"center\">Verlies</TableCell>\n              <TableCell sx={{ color: 'white', fontWeight: 'bold' }} align=\"center\">Totaal</TableCell>\n              <TableCell sx={{ color: 'white', fontWeight: 'bold' }} align=\"center\">Win %</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {sortedStats.map((stat) => (\n              <TableRow key={stat.player}>\n                <TableCell sx={{ color: 'white' }}>{stat.player}</TableCell>\n                <TableCell sx={{ color: '#4caf50' }} align=\"center\">{stat.wins}</TableCell>\n                <TableCell sx={{ color: '#f44336' }} align=\"center\">{stat.losses}</TableCell>\n                <TableCell sx={{ color: 'white' }} align=\"center\">{stat.totalGames}</TableCell>\n                <TableCell sx={{ color: 'white' }} align=\"center\">{stat.winPercentage.toFixed(1)}%</TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      <Box sx={{ mt: 2 }}>\n        {sortedStats.map((stat) => (\n          <Box key={stat.player} sx={{ mb: 2 }}>\n            <Box sx={{ display: 'flex', justifyContent: 'space-between', mb: 1 }}>\n              <Typography variant=\"subtitle1\" sx={{ color: 'white' }}>\n                {stat.player}\n              </Typography>\n              <Typography variant=\"subtitle1\" sx={{ color: 'white' }}>\n                {stat.wins}W - {stat.losses}V ({stat.winPercentage.toFixed(1)}%)\n              </Typography>\n            </Box>\n            <LinearProgress\n              variant=\"determinate\"\n              value={stat.winPercentage}\n              sx={{\n                height: 10,\n                borderRadius: 5,\n                backgroundColor: 'rgba(255, 255, 255, 0.2)',\n                '& .MuiLinearProgress-bar': {\n                  backgroundColor: stat.winPercentage >= 50 ? '#4caf50' : '#f44336',\n                },\n              }}\n            />\n          </Box>\n        ))}\n      </Box>\n    </Paper>\n  );\n};\n\nexport default Stats; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}