{"ast":null,"code":"var _jsxFileName = \"/Users/franksijbrands/ai/sjoelen/tafeltennis/src/components/GameList.tsx\";\nimport React from 'react';\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, Typography, Box } from '@mui/material';\nimport { format } from 'date-fns';\nimport { nl } from 'date-fns/locale';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GameList = ({\n  games\n}) => {\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    elevation: 3,\n    sx: {\n      p: 3,\n      background: 'linear-gradient(45deg, #1a237e 30%, #0d47a1 90%)',\n      color: 'white'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      gutterBottom: true,\n      align: \"center\",\n      children: \"Gespeelde Games\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              sx: {\n                color: 'white',\n                fontWeight: 'bold'\n              },\n              children: \"Datum\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              sx: {\n                color: 'white',\n                fontWeight: 'bold'\n              },\n              align: \"center\",\n              children: \"Winnaar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              sx: {\n                color: 'white',\n                fontWeight: 'bold'\n              },\n              align: \"center\",\n              children: \"Score\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              sx: {\n                color: 'white',\n                fontWeight: 'bold'\n              },\n              align: \"center\",\n              children: \"Verliezer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: games.sort((a, b) => new Date(b.date).getTime() - new Date(a.date).getTime()).map(game => /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              sx: {\n                color: 'white'\n              },\n              children: format(new Date(game.date), 'dd MMMM yyyy', {\n                locale: nl\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              sx: {\n                color: '#4caf50',\n                fontWeight: 'bold'\n              },\n              align: \"center\",\n              children: game.winner\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"center\",\n              children: /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  display: 'inline-block',\n                  px: 2,\n                  py: 1,\n                  borderRadius: 2,\n                  backgroundColor: 'rgba(255, 255, 255, 0.1)',\n                  color: 'white',\n                  fontWeight: 'bold'\n                },\n                children: [game.winnerScore, \" - \", game.loserScore]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              sx: {\n                color: '#f44336'\n              },\n              align: \"center\",\n              children: game.loser\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 17\n            }, this)]\n          }, game.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_c = GameList;\nexport default GameList;\nvar _c;\n$RefreshReg$(_c, \"GameList\");","map":{"version":3,"names":["React","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","Typography","Box","format","nl","jsxDEV","_jsxDEV","GameList","games","elevation","sx","p","background","color","children","variant","gutterBottom","align","fileName","_jsxFileName","lineNumber","columnNumber","fontWeight","sort","a","b","Date","date","getTime","map","game","locale","winner","display","px","py","borderRadius","backgroundColor","winnerScore","loserScore","loser","id","_c","$RefreshReg$"],"sources":["/Users/franksijbrands/ai/sjoelen/tafeltennis/src/components/GameList.tsx"],"sourcesContent":["import React from 'react';\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Paper,\n  Typography,\n  Box\n} from '@mui/material';\nimport { format } from 'date-fns';\nimport { nl } from 'date-fns/locale';\nimport { Game } from '../types';\n\ninterface GameListProps {\n  games: Game[];\n}\n\nconst GameList: React.FC<GameListProps> = ({ games }) => {\n  return (\n    <Paper elevation={3} sx={{ p: 3, background: 'linear-gradient(45deg, #1a237e 30%, #0d47a1 90%)', color: 'white' }}>\n      <Typography variant=\"h6\" gutterBottom align=\"center\">\n        Gespeelde Games\n      </Typography>\n      <TableContainer>\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell sx={{ color: 'white', fontWeight: 'bold' }}>Datum</TableCell>\n              <TableCell sx={{ color: 'white', fontWeight: 'bold' }} align=\"center\">Winnaar</TableCell>\n              <TableCell sx={{ color: 'white', fontWeight: 'bold' }} align=\"center\">Score</TableCell>\n              <TableCell sx={{ color: 'white', fontWeight: 'bold' }} align=\"center\">Verliezer</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {games.sort((a, b) => new Date(b.date).getTime() - new Date(a.date).getTime()).map((game) => (\n              <TableRow key={game.id}>\n                <TableCell sx={{ color: 'white' }}>\n                  {format(new Date(game.date), 'dd MMMM yyyy', { locale: nl })}\n                </TableCell>\n                <TableCell sx={{ color: '#4caf50', fontWeight: 'bold' }} align=\"center\">{game.winner}</TableCell>\n                <TableCell align=\"center\">\n                  <Box sx={{ \n                    display: 'inline-block',\n                    px: 2,\n                    py: 1,\n                    borderRadius: 2,\n                    backgroundColor: 'rgba(255, 255, 255, 0.1)',\n                    color: 'white',\n                    fontWeight: 'bold'\n                  }}>\n                    {game.winnerScore} - {game.loserScore}\n                  </Box>\n                </TableCell>\n                <TableCell sx={{ color: '#f44336' }} align=\"center\">{game.loser}</TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </Paper>\n  );\n};\n\nexport default GameList; "],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SACEC,KAAK,EACLC,SAAS,EACTC,SAAS,EACTC,cAAc,EACdC,SAAS,EACTC,QAAQ,EACRC,KAAK,EACLC,UAAU,EACVC,GAAG,QACE,eAAe;AACtB,SAASC,MAAM,QAAQ,UAAU;AACjC,SAASC,EAAE,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAOrC,MAAMC,QAAiC,GAAGA,CAAC;EAAEC;AAAM,CAAC,KAAK;EACvD,oBACEF,OAAA,CAACN,KAAK;IAACS,SAAS,EAAE,CAAE;IAACC,EAAE,EAAE;MAAEC,CAAC,EAAE,CAAC;MAAEC,UAAU,EAAE,kDAAkD;MAAEC,KAAK,EAAE;IAAQ,CAAE;IAAAC,QAAA,gBAChHR,OAAA,CAACL,UAAU;MAACc,OAAO,EAAC,IAAI;MAACC,YAAY;MAACC,KAAK,EAAC,QAAQ;MAAAH,QAAA,EAAC;IAErD;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY,CAAC,eACbf,OAAA,CAACT,cAAc;MAAAiB,QAAA,eACbR,OAAA,CAACZ,KAAK;QAAAoB,QAAA,gBACJR,OAAA,CAACR,SAAS;UAAAgB,QAAA,eACRR,OAAA,CAACP,QAAQ;YAAAe,QAAA,gBACPR,OAAA,CAACV,SAAS;cAACc,EAAE,EAAE;gBAAEG,KAAK,EAAE,OAAO;gBAAES,UAAU,EAAE;cAAO,CAAE;cAAAR,QAAA,EAAC;YAAK;cAAAI,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAW,CAAC,eACxEf,OAAA,CAACV,SAAS;cAACc,EAAE,EAAE;gBAAEG,KAAK,EAAE,OAAO;gBAAES,UAAU,EAAE;cAAO,CAAE;cAACL,KAAK,EAAC,QAAQ;cAAAH,QAAA,EAAC;YAAO;cAAAI,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAW,CAAC,eACzFf,OAAA,CAACV,SAAS;cAACc,EAAE,EAAE;gBAAEG,KAAK,EAAE,OAAO;gBAAES,UAAU,EAAE;cAAO,CAAE;cAACL,KAAK,EAAC,QAAQ;cAAAH,QAAA,EAAC;YAAK;cAAAI,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAW,CAAC,eACvFf,OAAA,CAACV,SAAS;cAACc,EAAE,EAAE;gBAAEG,KAAK,EAAE,OAAO;gBAAES,UAAU,EAAE;cAAO,CAAE;cAACL,KAAK,EAAC,QAAQ;cAAAH,QAAA,EAAC;YAAS;cAAAI,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAW,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACnF;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACF,CAAC,eACZf,OAAA,CAACX,SAAS;UAAAmB,QAAA,EACPN,KAAK,CAACe,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK,IAAIC,IAAI,CAACD,CAAC,CAACE,IAAI,CAAC,CAACC,OAAO,CAAC,CAAC,GAAG,IAAIF,IAAI,CAACF,CAAC,CAACG,IAAI,CAAC,CAACC,OAAO,CAAC,CAAC,CAAC,CAACC,GAAG,CAAEC,IAAI,iBACtFxB,OAAA,CAACP,QAAQ;YAAAe,QAAA,gBACPR,OAAA,CAACV,SAAS;cAACc,EAAE,EAAE;gBAAEG,KAAK,EAAE;cAAQ,CAAE;cAAAC,QAAA,EAC/BX,MAAM,CAAC,IAAIuB,IAAI,CAACI,IAAI,CAACH,IAAI,CAAC,EAAE,cAAc,EAAE;gBAAEI,MAAM,EAAE3B;cAAG,CAAC;YAAC;cAAAc,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACnD,CAAC,eACZf,OAAA,CAACV,SAAS;cAACc,EAAE,EAAE;gBAAEG,KAAK,EAAE,SAAS;gBAAES,UAAU,EAAE;cAAO,CAAE;cAACL,KAAK,EAAC,QAAQ;cAAAH,QAAA,EAAEgB,IAAI,CAACE;YAAM;cAAAd,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAY,CAAC,eACjGf,OAAA,CAACV,SAAS;cAACqB,KAAK,EAAC,QAAQ;cAAAH,QAAA,eACvBR,OAAA,CAACJ,GAAG;gBAACQ,EAAE,EAAE;kBACPuB,OAAO,EAAE,cAAc;kBACvBC,EAAE,EAAE,CAAC;kBACLC,EAAE,EAAE,CAAC;kBACLC,YAAY,EAAE,CAAC;kBACfC,eAAe,EAAE,0BAA0B;kBAC3CxB,KAAK,EAAE,OAAO;kBACdS,UAAU,EAAE;gBACd,CAAE;gBAAAR,QAAA,GACCgB,IAAI,CAACQ,WAAW,EAAC,KAAG,EAACR,IAAI,CAACS,UAAU;cAAA;gBAAArB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAClC;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACG,CAAC,eACZf,OAAA,CAACV,SAAS;cAACc,EAAE,EAAE;gBAAEG,KAAK,EAAE;cAAU,CAAE;cAACI,KAAK,EAAC,QAAQ;cAAAH,QAAA,EAAEgB,IAAI,CAACU;YAAK;cAAAtB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAY,CAAC;UAAA,GAlB/DS,IAAI,CAACW,EAAE;YAAAvB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAmBZ,CACX;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACO,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACZ,CAAC;AAEZ,CAAC;AAACqB,EAAA,GA5CInC,QAAiC;AA8CvC,eAAeA,QAAQ;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}